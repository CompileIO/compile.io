{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/class-select/class-button/class-button.component.css","webpack:///./src/app/class-select/class-button/class-button.component.html","webpack:///./src/app/class-select/class-button/class-button.component.ts","webpack:///./src/app/class-select/class-select.component.css","webpack:///./src/app/class-select/class-select.component.html","webpack:///./src/app/class-select/class-select.component.ts","webpack:///./src/app/upload/upload.component.css","webpack:///./src/app/upload/upload.component.html","webpack:///./src/app/upload/upload.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-class-select></app-class-select>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'index';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { UploadComponent } from './upload/upload.component';\r\nimport { ClassSelectComponent } from './class-select/class-select.component';\r\nimport { ClassButtonComponent } from './class-select/class-button/class-button.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UploadComponent,\r\n    ClassSelectComponent,\r\n    ClassButtonComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<span>{{className}}</span>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-class-button',\n  templateUrl: './class-button.component.html',\n  styleUrls: ['./class-button.component.css']\n})\nexport class ClassButtonComponent implements OnInit {\n  className = \"\";\n\n  constructor(name: string) {\n    this.className = name;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"ul {\\r\\n  list-style-type: none;\\r\\n  padding: 10pt;\\r\\n  text-align: center;\\r\\n}\\r\\nli {\\r\\n  padding: 10pt;\\r\\n}\\r\\ndiv {\\r\\n  text-align: center;\\r\\n}\\r\\nh1 {\\r\\n  font-size: 72px;\\r\\n}\\r\\n.button {\\r\\n  padding: 10pt;\\r\\n  margin: 10pt;\\r\\n}\\r\\nbutton {\\r\\n  margin: 20pt;\\r\\n}\\r\\n\"","module.exports = \"\\r\\n<ul class=\\\"classes\\\" *ngIf=\\\"ifNoSelectedClass()\\\">\\r\\n  <li *ngFor=\\\"let cl of classButtons\\\">\\r\\n    <button class=\\\"button\\\" (click) =\\\"selectClass(cl.className)\\\">{{cl.className}}</button>\\r\\n  </li>\\r\\n</ul>\\r\\n<div *ngIf=\\\"ifSelectedClass()\\\">\\r\\n  <h1>{{selectedClass}}</h1>\\r\\n  <app-upload></app-upload>\\r\\n  <span>\\r\\n    <button (click)=\\\"unSelect()\\\">Back</button>\\r\\n  </span>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { isUndefined } from 'util';\r\n\r\nimport { ClassButtonComponent } from './class-button/class-button.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-class-select',\r\n  templateUrl: './class-select.component.html',\r\n  styleUrls: ['./class-select.component.css']\r\n})\r\nexport class ClassSelectComponent implements OnInit {\r\n  selectedClass: string = \"\";\r\n  classButtons: ClassButtonComponent[] = [];\r\n\r\n  constructor(private http: HttpClient) {\r\n    const req = new HttpRequest('GET', \"http://localhost:4000/get_request\", {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\"\r\n      }),\r\n      reportProgress: true,\r\n      withCredentials: true\r\n    });\r\n    this.http.request(req).subscribe(event => {\r\n      if (event instanceof HttpResponse) {\r\n        console.log(\"HEARD BACK!\");\r\n        var i = 0;\r\n        this.classButtons = [];\r\n        while (!isUndefined(event.body[i])) {\r\n          this.classButtons.push(new ClassButtonComponent(event.body[i].className));\r\n          i++;\r\n        } \r\n        //classes = String[](event.body);\r\n        //var items = event.body;\r\n        //classes = items.map(function (item) {\r\n        //  return item['className'];\r\n        //});\r\n        //if (isNullOrUndefined(classes)) {\r\n        //  classes = [\"\"]\r\n        //}\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n  ifNoSelectedClass(): boolean {\r\n    if (this.selectedClass == \"\") {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  ifSelectedClass(): boolean {\r\n    if (this.selectedClass == \"\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  selectClass(classToSelect: string) {\r\n    this.selectedClass = classToSelect;\r\n}\r\n  unSelect() {\r\n    this.selectedClass = \"\";\r\n  }\r\n\r\n\r\nngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n  <!-- <input [(ngModel)]=\\\"file\\\" accept=\\\".zip\\\" type=\\\"file\\\" id=\\\"file\\\" name=\\\"file\\\" />\\r\\n  <button (click)=\\\"uploadFile()\\\">Add</button> -->\\r\\n\\r\\n  <input  [(ngModel)]=\\\"file\\\" accept=\\\".zip\\\" type=\\\"file\\\" id=\\\"file\\\" name=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" placeholder=\\\"Upload file...\\\" />\\r\\n<button type=\\\"button\\\" (click)=\\\"upload()\\\">Upload</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { HttpClient, HttpRequest, HttpResponse, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n  // file: File;\r\n\r\n  filesToUpload: Array<File>;\r\n\r\n  constructor() {\r\n      this.filesToUpload = [];\r\n  }\r\n\r\n  upload() {\r\n      this.makeFileRequest(\"http://localhost:4000/upload\", [], this.filesToUpload).then((result) => {\r\n          console.log(result);\r\n      }, (error) => {\r\n          console.error(error);\r\n      });\r\n  }\r\n\r\n  fileChangeEvent(fileInput: any){\r\n      this.filesToUpload = <Array<File>> fileInput.target.files;\r\n  }\r\n\r\n  makeFileRequest(url: string, params: Array<string>, files: Array<File>) {\r\n      return new Promise((resolve, reject) => {\r\n          var formData: any = new FormData();\r\n          var xhr = new XMLHttpRequest();\r\n          for(var i = 0; i < files.length; i++) {\r\n              formData.append(\"uploads[]\", files[i], files[i].name);\r\n          }\r\n          xhr.onreadystatechange = function () {\r\n              if (xhr.readyState == 4) {\r\n                  if (xhr.status == 200) {\r\n                      resolve(JSON.parse(xhr.response));\r\n                  } else {\r\n                      reject(xhr.response);\r\n                  }\r\n              }\r\n          }\r\n          xhr.open(\"POST\", url, true);\r\n          xhr.send(formData);\r\n      });\r\n  }\r\n\r\n  // constructor(private http: HttpClient) { }\r\n\r\n  // uploadFile() {\r\n  //   if (!isNullOrUndefined(this.file)) {\r\n  //     console.log(this.file.size);\r\n  //     console.log(this.file.type);\r\n  //     console.log(this.file);\r\n  //     const formData: FormData = new FormData();\r\n  //     formData.append('file', this.file);\r\n  //     const req = new HttpRequest('POST', \"http://localhost:4000/post_request\", formData, {\r\n  //       headers: new HttpHeaders({\r\n  //         \"Content-Type\": \"application/json\"\r\n  //       }),\r\n  //       reportProgress: true,\r\n  //       withCredentials: true\r\n  //     });\r\n\r\n  //     this.http.request(req).subscribe(event => {\r\n  //       if (event instanceof HttpResponse) {\r\n  //         return;\r\n  //       }\r\n  //     });\r\n  //   } else {\r\n  //     console.log(\"BAD!\");\r\n  //   }\r\n  // }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}